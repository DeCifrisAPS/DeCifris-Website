/**
 * @fileoverview added by tsickle
 * Generated from: lib/hidden-on-collapsed.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';
export class HiddenOnCollapsedDirective {
    /**
     * @param {?} templateRef
     * @param {?} viewContainer
     */
    constructor(templateRef, viewContainer) {
        this.templateRef = templateRef;
        this.viewContainer = viewContainer;
    }
    /**
     * @param {?} isShown
     * @return {?}
     */
    set hiddenOnCollapsed(isShown) {
        if (isShown) {
            // If condition is true add template to DOM
            this.viewContainer.createEmbeddedView(this.templateRef);
        }
        else {
            // Else remove template from DOM
            this.viewContainer.clear();
        }
    }
}
HiddenOnCollapsedDirective.decorators = [
    { type: Directive, args: [{
                selector: '[hiddenOnCollapsed]'
            },] }
];
/** @nocollapse */
HiddenOnCollapsedDirective.ctorParameters = () => [
    { type: TemplateRef },
    { type: ViewContainerRef }
];
HiddenOnCollapsedDirective.propDecorators = {
    hiddenOnCollapsed: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    HiddenOnCollapsedDirective.prototype.templateRef;
    /**
     * @type {?}
     * @private
     */
    HiddenOnCollapsedDirective.prototype.viewContainer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlkZGVuLW9uLWNvbGxhcHNlZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLW5nLXNpZGVuYXYvIiwic291cmNlcyI6WyJsaWIvaGlkZGVuLW9uLWNvbGxhcHNlZC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsZ0JBQWdCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFLOUUsTUFBTSxPQUFPLDBCQUEwQjs7Ozs7SUFFckMsWUFBb0IsV0FBNkIsRUFBVSxhQUErQjtRQUF0RSxnQkFBVyxHQUFYLFdBQVcsQ0FBa0I7UUFBVSxrQkFBYSxHQUFiLGFBQWEsQ0FBa0I7SUFDMUYsQ0FBQzs7Ozs7SUFFRCxJQUFhLGlCQUFpQixDQUFDLE9BQWdCO1FBQzdDLElBQUksT0FBTyxFQUFFO1lBQ1gsMkNBQTJDO1lBQzNDLElBQUksQ0FBQyxhQUFhLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQ3pEO2FBQU07WUFDTCxnQ0FBZ0M7WUFDaEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztTQUM1QjtJQUNILENBQUM7OztZQWhCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjthQUNoQzs7OztZQUp5QixXQUFXO1lBQUUsZ0JBQWdCOzs7Z0NBVXBELEtBQUs7Ozs7Ozs7SUFITSxpREFBcUM7Ozs7O0lBQUUsbURBQXVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIElucHV0LCBUZW1wbGF0ZVJlZiwgVmlld0NvbnRhaW5lclJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1toaWRkZW5PbkNvbGxhcHNlZF0nXG59KVxuZXhwb3J0IGNsYXNzIEhpZGRlbk9uQ29sbGFwc2VkRGlyZWN0aXZlIHtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+LCBwcml2YXRlIHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWYpIHtcbiAgfVxuXG4gIEBJbnB1dCgpIHNldCBoaWRkZW5PbkNvbGxhcHNlZChpc1Nob3duOiBib29sZWFuKSB7XG4gICAgaWYgKGlzU2hvd24pIHtcbiAgICAgIC8vIElmIGNvbmRpdGlvbiBpcyB0cnVlIGFkZCB0ZW1wbGF0ZSB0byBET01cbiAgICAgIHRoaXMudmlld0NvbnRhaW5lci5jcmVhdGVFbWJlZGRlZFZpZXcodGhpcy50ZW1wbGF0ZVJlZik7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEVsc2UgcmVtb3ZlIHRlbXBsYXRlIGZyb20gRE9NXG4gICAgICB0aGlzLnZpZXdDb250YWluZXIuY2xlYXIoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==