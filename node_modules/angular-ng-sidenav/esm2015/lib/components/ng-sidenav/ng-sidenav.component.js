/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/ng-sidenav/ng-sidenav.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { sidenavAnimations } from '../../sidenav-animations';
export class NgSidenavComponent {
    constructor() {
        this.expanded = true; // Whether drawer is open or close depend on drawer state
        // Whether drawer is open or close depend on drawer state
        this.drawerState = 'expanded'; // Drawer state (expanded, collapsed, hidden)
        // Drawer state (expanded, collapsed, hidden)
        this.color = '#19222a';
        this.drawerWidth = '250px';
        this.drawerWidthCollapsed = '80px';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        // Drawer state change
        if (changes && changes.drawerState) {
            this._drawerState = changes.drawerState.currentValue;
        }
        // drawer open/close change
        if (changes && changes.expanded) {
            this.expanded = changes.expanded.currentValue;
            this.drawerState = this.expanded ? 'expanded' : this._drawerState;
        }
    }
}
NgSidenavComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng-sidenav',
                template: "<div class=\"ng-sidenav\"\n     [style.backgroundColor]=\"color\"\n     [@drawerState]=\"{value:drawerState,\n     params:{drawerWidth:drawerWidth, drawerWidthCollapsed: drawerWidthCollapsed}}\">\n  <ng-content></ng-content>\n</div>\n",
                animations: [sidenavAnimations.serDrawerState],
                styles: [".ng-sidenav{display:flex;flex-direction:column;height:100%;width:100%;box-sizing:border-box}"]
            }] }
];
/** @nocollapse */
NgSidenavComponent.ctorParameters = () => [];
NgSidenavComponent.propDecorators = {
    expanded: [{ type: Input }],
    drawerState: [{ type: Input }],
    color: [{ type: Input }],
    drawerWidth: [{ type: Input }],
    drawerWidthCollapsed: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NgSidenavComponent.prototype._drawerState;
    /** @type {?} */
    NgSidenavComponent.prototype.expanded;
    /** @type {?} */
    NgSidenavComponent.prototype.drawerState;
    /** @type {?} */
    NgSidenavComponent.prototype.color;
    /** @type {?} */
    NgSidenavComponent.prototype.drawerWidth;
    /** @type {?} */
    NgSidenavComponent.prototype.drawerWidthCollapsed;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctc2lkZW5hdi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLW5nLXNpZGVuYXYvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9uZy1zaWRlbmF2L25nLXNpZGVuYXYuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQW1DLE1BQU0sZUFBZSxDQUFDO0FBQ2pGLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBUTNELE1BQU0sT0FBTyxrQkFBa0I7SUFVN0I7UUFOUyxhQUFRLEdBQUcsSUFBSSxDQUFDLENBQUMseURBQXlEOztRQUMxRSxnQkFBVyxHQUFHLFVBQVUsQ0FBQyxDQUFDLDZDQUE2Qzs7UUFDdkUsVUFBSyxHQUFHLFNBQVMsQ0FBQztRQUNsQixnQkFBVyxHQUFHLE9BQU8sQ0FBQztRQUN0Qix5QkFBb0IsR0FBRyxNQUFNLENBQUM7SUFHdkMsQ0FBQzs7OztJQUVELFFBQVE7SUFDUixDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxzQkFBc0I7UUFDdEIsSUFBSSxPQUFPLElBQUksT0FBTyxDQUFDLFdBQVcsRUFBRTtZQUNsQyxJQUFJLENBQUMsWUFBWSxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDO1NBQ3REO1FBQ0QsMkJBQTJCO1FBQzNCLElBQUksT0FBTyxJQUFJLE9BQU8sQ0FBQyxRQUFRLEVBQUU7WUFDL0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQztZQUM5QyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztTQUNuRTtJQUNILENBQUM7OztZQWhDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLFlBQVk7Z0JBQ3RCLHNQQUEwQztnQkFFMUMsVUFBVSxFQUFFLENBQUMsaUJBQWlCLENBQUMsY0FBYyxDQUFDOzthQUMvQzs7Ozs7dUJBS0UsS0FBSzswQkFDTCxLQUFLO29CQUNMLEtBQUs7MEJBQ0wsS0FBSzttQ0FDTCxLQUFLOzs7Ozs7O0lBTk4sMENBQXFCOztJQUVyQixzQ0FBeUI7O0lBQ3pCLHlDQUFrQzs7SUFDbEMsbUNBQTJCOztJQUMzQix5Q0FBK0I7O0lBQy9CLGtEQUF1QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIFNpbXBsZUNoYW5nZXN9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtzaWRlbmF2QW5pbWF0aW9uc30gZnJvbSAnLi4vLi4vc2lkZW5hdi1hbmltYXRpb25zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmctc2lkZW5hdicsXG4gIHRlbXBsYXRlVXJsOiAnLi9uZy1zaWRlbmF2LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbmctc2lkZW5hdi5jb21wb25lbnQuc2NzcyddLFxuICBhbmltYXRpb25zOiBbc2lkZW5hdkFuaW1hdGlvbnMuc2VyRHJhd2VyU3RhdGVdXG59KVxuZXhwb3J0IGNsYXNzIE5nU2lkZW5hdkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgLy8gVE9ETzogQWRkIG1vZGU6ICdvdmVyJyB8ICdwdXNoJyB8ICdzaWRlJ1xuICBwcml2YXRlIF9kcmF3ZXJTdGF0ZTtcblxuICBASW5wdXQoKSBleHBhbmRlZCA9IHRydWU7IC8vIFdoZXRoZXIgZHJhd2VyIGlzIG9wZW4gb3IgY2xvc2UgZGVwZW5kIG9uIGRyYXdlciBzdGF0ZVxuICBASW5wdXQoKSBkcmF3ZXJTdGF0ZSA9ICdleHBhbmRlZCc7IC8vIERyYXdlciBzdGF0ZSAoZXhwYW5kZWQsIGNvbGxhcHNlZCwgaGlkZGVuKVxuICBASW5wdXQoKSBjb2xvciA9ICcjMTkyMjJhJztcbiAgQElucHV0KCkgZHJhd2VyV2lkdGggPSAnMjUwcHgnO1xuICBASW5wdXQoKSBkcmF3ZXJXaWR0aENvbGxhcHNlZCA9ICc4MHB4JztcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIC8vIERyYXdlciBzdGF0ZSBjaGFuZ2VcbiAgICBpZiAoY2hhbmdlcyAmJiBjaGFuZ2VzLmRyYXdlclN0YXRlKSB7XG4gICAgICB0aGlzLl9kcmF3ZXJTdGF0ZSA9IGNoYW5nZXMuZHJhd2VyU3RhdGUuY3VycmVudFZhbHVlO1xuICAgIH1cbiAgICAvLyBkcmF3ZXIgb3Blbi9jbG9zZSBjaGFuZ2VcbiAgICBpZiAoY2hhbmdlcyAmJiBjaGFuZ2VzLmV4cGFuZGVkKSB7XG4gICAgICB0aGlzLmV4cGFuZGVkID0gY2hhbmdlcy5leHBhbmRlZC5jdXJyZW50VmFsdWU7XG4gICAgICB0aGlzLmRyYXdlclN0YXRlID0gdGhpcy5leHBhbmRlZCA/ICdleHBhbmRlZCcgOiB0aGlzLl9kcmF3ZXJTdGF0ZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==