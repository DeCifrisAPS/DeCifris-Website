/**
 * @fileoverview added by tsickle
 * Generated from: lib/hidden-on-collapsed.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';
var HiddenOnCollapsedDirective = /** @class */ (function () {
    function HiddenOnCollapsedDirective(templateRef, viewContainer) {
        this.templateRef = templateRef;
        this.viewContainer = viewContainer;
    }
    Object.defineProperty(HiddenOnCollapsedDirective.prototype, "hiddenOnCollapsed", {
        set: /**
         * @param {?} isShown
         * @return {?}
         */
        function (isShown) {
            if (isShown) {
                // If condition is true add template to DOM
                this.viewContainer.createEmbeddedView(this.templateRef);
            }
            else {
                // Else remove template from DOM
                this.viewContainer.clear();
            }
        },
        enumerable: true,
        configurable: true
    });
    HiddenOnCollapsedDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[hiddenOnCollapsed]'
                },] }
    ];
    /** @nocollapse */
    HiddenOnCollapsedDirective.ctorParameters = function () { return [
        { type: TemplateRef },
        { type: ViewContainerRef }
    ]; };
    HiddenOnCollapsedDirective.propDecorators = {
        hiddenOnCollapsed: [{ type: Input }]
    };
    return HiddenOnCollapsedDirective;
}());
export { HiddenOnCollapsedDirective };
if (false) {
    /**
     * @type {?}
     * @private
     */
    HiddenOnCollapsedDirective.prototype.templateRef;
    /**
     * @type {?}
     * @private
     */
    HiddenOnCollapsedDirective.prototype.viewContainer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlkZGVuLW9uLWNvbGxhcHNlZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLW5nLXNpZGVuYXYvIiwic291cmNlcyI6WyJsaWIvaGlkZGVuLW9uLWNvbGxhcHNlZC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsZ0JBQWdCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFOUU7SUFLRSxvQ0FBb0IsV0FBNkIsRUFBVSxhQUErQjtRQUF0RSxnQkFBVyxHQUFYLFdBQVcsQ0FBa0I7UUFBVSxrQkFBYSxHQUFiLGFBQWEsQ0FBa0I7SUFDMUYsQ0FBQztJQUVELHNCQUFhLHlEQUFpQjs7Ozs7UUFBOUIsVUFBK0IsT0FBZ0I7WUFDN0MsSUFBSSxPQUFPLEVBQUU7Z0JBQ1gsMkNBQTJDO2dCQUMzQyxJQUFJLENBQUMsYUFBYSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQzthQUN6RDtpQkFBTTtnQkFDTCxnQ0FBZ0M7Z0JBQ2hDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7YUFDNUI7UUFDSCxDQUFDOzs7T0FBQTs7Z0JBaEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUscUJBQXFCO2lCQUNoQzs7OztnQkFKeUIsV0FBVztnQkFBRSxnQkFBZ0I7OztvQ0FVcEQsS0FBSzs7SUFTUixpQ0FBQztDQUFBLEFBakJELElBaUJDO1NBZFksMEJBQTBCOzs7Ozs7SUFFekIsaURBQXFDOzs7OztJQUFFLG1EQUF1QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBJbnB1dCwgVGVtcGxhdGVSZWYsIFZpZXdDb250YWluZXJSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbaGlkZGVuT25Db2xsYXBzZWRdJ1xufSlcbmV4cG9ydCBjbGFzcyBIaWRkZW5PbkNvbGxhcHNlZERpcmVjdGl2ZSB7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PiwgcHJpdmF0ZSB2aWV3Q29udGFpbmVyOiBWaWV3Q29udGFpbmVyUmVmKSB7XG4gIH1cblxuICBASW5wdXQoKSBzZXQgaGlkZGVuT25Db2xsYXBzZWQoaXNTaG93bjogYm9vbGVhbikge1xuICAgIGlmIChpc1Nob3duKSB7XG4gICAgICAvLyBJZiBjb25kaXRpb24gaXMgdHJ1ZSBhZGQgdGVtcGxhdGUgdG8gRE9NXG4gICAgICB0aGlzLnZpZXdDb250YWluZXIuY3JlYXRlRW1iZWRkZWRWaWV3KHRoaXMudGVtcGxhdGVSZWYpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBFbHNlIHJlbW92ZSB0ZW1wbGF0ZSBmcm9tIERPTVxuICAgICAgdGhpcy52aWV3Q29udGFpbmVyLmNsZWFyKCk7XG4gICAgfVxuICB9XG59XG4iXX0=