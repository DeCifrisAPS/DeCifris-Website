/**
 * @fileoverview added by tsickle
 * Generated from: lib/sidenav-animations.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { animate, state, style, transition, trigger, } from '@angular/animations';
/**
 * Animation that slides a drawer in and out.
 * @type {?}
 */
export var sidenavAnimations = {
    serDrawerState: trigger('drawerState', [
        state('expanded', style({ width: '{{ drawerWidth }}' }), { params: { drawerWidth: '250px' } }),
        state('collapsed', style({ width: '{{ drawerWidthCollapsed }}' }), { params: { drawerWidthCollapsed: '80px' } }),
        state('hidden', style({ width: '0' })),
        transition('collapsed => expanded', animate('200ms ease-in')),
        transition('expanded => collapsed', animate('200ms ease-out')),
        transition('hidden => expanded', animate('200ms ease-in')),
        transition('expanded => hidden', animate('200ms ease-out'))
    ]),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZW5hdi1hbmltYXRpb25zLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1uZy1zaWRlbmF2LyIsInNvdXJjZXMiOlsibGliL3NpZGVuYXYtYW5pbWF0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFDTCxPQUFPLEVBQ1AsS0FBSyxFQUNMLEtBQUssRUFDTCxVQUFVLEVBQ1YsT0FBTyxHQUVSLE1BQU0scUJBQXFCLENBQUM7Ozs7O0FBRzdCLE1BQU0sS0FBTyxpQkFBaUIsR0FFMUI7SUFDRixjQUFjLEVBQUUsT0FBTyxDQUFDLGFBQWEsRUFBRTtRQUNyQyxLQUFLLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxFQUFDLEtBQUssRUFBRSxtQkFBbUIsRUFBQyxDQUFDLEVBQUUsRUFBQyxNQUFNLEVBQUUsRUFBQyxXQUFXLEVBQUUsT0FBTyxFQUFDLEVBQUMsQ0FBQztRQUN4RixLQUFLLENBQUMsV0FBVyxFQUFFLEtBQUssQ0FBQyxFQUFDLEtBQUssRUFBRSw0QkFBNEIsRUFBQyxDQUFDLEVBQUUsRUFBQyxNQUFNLEVBQUUsRUFBQyxvQkFBb0IsRUFBRSxNQUFNLEVBQUMsRUFBQyxDQUFDO1FBQzFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLEVBQUMsS0FBSyxFQUFFLEdBQUcsRUFBQyxDQUFDLENBQUM7UUFDcEMsVUFBVSxDQUFDLHVCQUF1QixFQUFFLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUM3RCxVQUFVLENBQUMsdUJBQXVCLEVBQUUsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDOUQsVUFBVSxDQUFDLG9CQUFvQixFQUFFLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUMxRCxVQUFVLENBQUMsb0JBQW9CLEVBQUUsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7S0FDNUQsQ0FBQztDQUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgYW5pbWF0ZSxcbiAgc3RhdGUsXG4gIHN0eWxlLFxuICB0cmFuc2l0aW9uLFxuICB0cmlnZ2VyLFxuICBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEsXG59IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuXG4vKiogQW5pbWF0aW9uIHRoYXQgc2xpZGVzIGEgZHJhd2VyIGluIGFuZCBvdXQuICovXG5leHBvcnQgY29uc3Qgc2lkZW5hdkFuaW1hdGlvbnM6IHtcbiAgcmVhZG9ubHkgc2VyRHJhd2VyU3RhdGU6IEFuaW1hdGlvblRyaWdnZXJNZXRhZGF0YTtcbn0gPSB7XG4gIHNlckRyYXdlclN0YXRlOiB0cmlnZ2VyKCdkcmF3ZXJTdGF0ZScsIFtcbiAgICBzdGF0ZSgnZXhwYW5kZWQnLCBzdHlsZSh7d2lkdGg6ICd7eyBkcmF3ZXJXaWR0aCB9fSd9KSwge3BhcmFtczoge2RyYXdlcldpZHRoOiAnMjUwcHgnfX0pLFxuICAgIHN0YXRlKCdjb2xsYXBzZWQnLCBzdHlsZSh7d2lkdGg6ICd7eyBkcmF3ZXJXaWR0aENvbGxhcHNlZCB9fSd9KSwge3BhcmFtczoge2RyYXdlcldpZHRoQ29sbGFwc2VkOiAnODBweCd9fSksXG4gICAgc3RhdGUoJ2hpZGRlbicsIHN0eWxlKHt3aWR0aDogJzAnfSkpLFxuICAgIHRyYW5zaXRpb24oJ2NvbGxhcHNlZCA9PiBleHBhbmRlZCcsIGFuaW1hdGUoJzIwMG1zIGVhc2UtaW4nKSksXG4gICAgdHJhbnNpdGlvbignZXhwYW5kZWQgPT4gY29sbGFwc2VkJywgYW5pbWF0ZSgnMjAwbXMgZWFzZS1vdXQnKSksXG4gICAgdHJhbnNpdGlvbignaGlkZGVuID0+IGV4cGFuZGVkJywgYW5pbWF0ZSgnMjAwbXMgZWFzZS1pbicpKSxcbiAgICB0cmFuc2l0aW9uKCdleHBhbmRlZCA9PiBoaWRkZW4nLCBhbmltYXRlKCcyMDBtcyBlYXNlLW91dCcpKVxuICBdKSxcbn07XG4iXX0=