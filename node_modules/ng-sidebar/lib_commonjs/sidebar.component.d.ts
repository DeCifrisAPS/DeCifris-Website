import { AfterContentInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { SidebarContainer } from './sidebar-container.component';
import * as ɵngcc0 from '@angular/core';
export declare class Sidebar implements AfterContentInit, OnInit, OnChanges, OnDestroy {
    private _container;
    private _ref;
    opened: boolean;
    openedChange: EventEmitter<boolean>;
    mode: 'over' | 'push' | 'slide';
    dock: boolean;
    dockedSize: string;
    position: 'start' | 'end' | 'left' | 'right' | 'top' | 'bottom';
    animate: boolean;
    autoCollapseHeight: number;
    autoCollapseWidth: number;
    autoCollapseOnInit: boolean;
    sidebarClass: string;
    ariaLabel: string;
    trapFocus: boolean;
    autoFocus: boolean;
    showBackdrop: boolean;
    closeOnClickBackdrop: boolean;
    closeOnClickOutside: boolean;
    keyClose: boolean;
    keyCode: number;
    onContentInit: EventEmitter<null>;
    onOpenStart: EventEmitter<null>;
    onOpened: EventEmitter<null>;
    onCloseStart: EventEmitter<null>;
    onClosed: EventEmitter<null>;
    onTransitionEnd: EventEmitter<null>;
    onModeChange: EventEmitter<string>;
    onPositionChange: EventEmitter<string>;
    _onRerender: EventEmitter<null>;
    _elSidebar: ElementRef;
    private _focusableElementsString;
    private _focusableElements;
    private _focusedBeforeOpen;
    private _tabIndexAttr;
    private _tabIndexIndicatorAttr;
    private _wasCollapsed;
    private _shouldAnimate;
    private _clickEvent;
    private _onClickOutsideAttached;
    private _onKeyDownAttached;
    private _onResizeAttached;
    private _isBrowser;
    constructor(_container: SidebarContainer, _ref: ChangeDetectorRef, platformId: Object);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    open(): void;
    close(): void;
    triggerRerender(): void;
    _getStyle(): CSSStyleDeclaration;
    _onTransitionEnd(e: TransitionEvent): void;
    private readonly _shouldTrapFocus;
    private _focusFirstItem;
    private _onFocusTrap;
    private _setFocused;
    private _initCloseListeners;
    private _initCloseClickListener;
    private _initCloseKeyDownListener;
    private _destroyCloseListeners;
    private _destroyCloseClickListener;
    private _destroyCloseKeyDownListener;
    private _onClickOutside;
    private _onKeyDown;
    private _initCollapseListeners;
    private _destroyCollapseListeners;
    private _collapse;
    readonly _height: number;
    readonly _width: number;
    readonly _dockedSize: number;
    readonly _isModeOver: boolean;
    readonly _isModePush: boolean;
    readonly _isModeSlide: boolean;
    readonly _isDocked: boolean;
    readonly _isLeftOrTop: boolean;
    readonly _isLeftOrRight: boolean;
    readonly _isInert: boolean;
    private _normalizePosition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Sidebar, [{ optional: true; }, null, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Sidebar, "ng-sidebar", never, { "opened": "opened"; "mode": "mode"; "dock": "dock"; "dockedSize": "dockedSize"; "position": "position"; "animate": "animate"; "autoCollapseOnInit": "autoCollapseOnInit"; "trapFocus": "trapFocus"; "autoFocus": "autoFocus"; "showBackdrop": "showBackdrop"; "closeOnClickBackdrop": "closeOnClickBackdrop"; "closeOnClickOutside": "closeOnClickOutside"; "keyClose": "keyClose"; "keyCode": "keyCode"; "autoCollapseHeight": "autoCollapseHeight"; "autoCollapseWidth": "autoCollapseWidth"; "sidebarClass": "sidebarClass"; "ariaLabel": "ariaLabel"; }, { "openedChange": "openedChange"; "onContentInit": "onContentInit"; "onOpenStart": "onOpenStart"; "onOpened": "onOpened"; "onCloseStart": "onCloseStart"; "onClosed": "onClosed"; "onTransitionEnd": "onTransitionEnd"; "onModeChange": "onModeChange"; "onPositionChange": "onPositionChange"; "_onRerender": "_onRerender"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsic2lkZWJhci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJDb250ZW50SW5pdCwgQ2hhbmdlRGV0ZWN0b3JSZWYsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2lkZWJhckNvbnRhaW5lciB9IGZyb20gJy4vc2lkZWJhci1jb250YWluZXIuY29tcG9uZW50JztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNpZGViYXIgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIF9jb250YWluZXI7XG4gICAgcHJpdmF0ZSBfcmVmO1xuICAgIG9wZW5lZDogYm9vbGVhbjtcbiAgICBvcGVuZWRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcbiAgICBtb2RlOiAnb3ZlcicgfCAncHVzaCcgfCAnc2xpZGUnO1xuICAgIGRvY2s6IGJvb2xlYW47XG4gICAgZG9ja2VkU2l6ZTogc3RyaW5nO1xuICAgIHBvc2l0aW9uOiAnc3RhcnQnIHwgJ2VuZCcgfCAnbGVmdCcgfCAncmlnaHQnIHwgJ3RvcCcgfCAnYm90dG9tJztcbiAgICBhbmltYXRlOiBib29sZWFuO1xuICAgIGF1dG9Db2xsYXBzZUhlaWdodDogbnVtYmVyO1xuICAgIGF1dG9Db2xsYXBzZVdpZHRoOiBudW1iZXI7XG4gICAgYXV0b0NvbGxhcHNlT25Jbml0OiBib29sZWFuO1xuICAgIHNpZGViYXJDbGFzczogc3RyaW5nO1xuICAgIGFyaWFMYWJlbDogc3RyaW5nO1xuICAgIHRyYXBGb2N1czogYm9vbGVhbjtcbiAgICBhdXRvRm9jdXM6IGJvb2xlYW47XG4gICAgc2hvd0JhY2tkcm9wOiBib29sZWFuO1xuICAgIGNsb3NlT25DbGlja0JhY2tkcm9wOiBib29sZWFuO1xuICAgIGNsb3NlT25DbGlja091dHNpZGU6IGJvb2xlYW47XG4gICAga2V5Q2xvc2U6IGJvb2xlYW47XG4gICAga2V5Q29kZTogbnVtYmVyO1xuICAgIG9uQ29udGVudEluaXQ6IEV2ZW50RW1pdHRlcjxudWxsPjtcbiAgICBvbk9wZW5TdGFydDogRXZlbnRFbWl0dGVyPG51bGw+O1xuICAgIG9uT3BlbmVkOiBFdmVudEVtaXR0ZXI8bnVsbD47XG4gICAgb25DbG9zZVN0YXJ0OiBFdmVudEVtaXR0ZXI8bnVsbD47XG4gICAgb25DbG9zZWQ6IEV2ZW50RW1pdHRlcjxudWxsPjtcbiAgICBvblRyYW5zaXRpb25FbmQ6IEV2ZW50RW1pdHRlcjxudWxsPjtcbiAgICBvbk1vZGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xuICAgIG9uUG9zaXRpb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xuICAgIF9vblJlcmVuZGVyOiBFdmVudEVtaXR0ZXI8bnVsbD47XG4gICAgX2VsU2lkZWJhcjogRWxlbWVudFJlZjtcbiAgICBwcml2YXRlIF9mb2N1c2FibGVFbGVtZW50c1N0cmluZztcbiAgICBwcml2YXRlIF9mb2N1c2FibGVFbGVtZW50cztcbiAgICBwcml2YXRlIF9mb2N1c2VkQmVmb3JlT3BlbjtcbiAgICBwcml2YXRlIF90YWJJbmRleEF0dHI7XG4gICAgcHJpdmF0ZSBfdGFiSW5kZXhJbmRpY2F0b3JBdHRyO1xuICAgIHByaXZhdGUgX3dhc0NvbGxhcHNlZDtcbiAgICBwcml2YXRlIF9zaG91bGRBbmltYXRlO1xuICAgIHByaXZhdGUgX2NsaWNrRXZlbnQ7XG4gICAgcHJpdmF0ZSBfb25DbGlja091dHNpZGVBdHRhY2hlZDtcbiAgICBwcml2YXRlIF9vbktleURvd25BdHRhY2hlZDtcbiAgICBwcml2YXRlIF9vblJlc2l6ZUF0dGFjaGVkO1xuICAgIHByaXZhdGUgX2lzQnJvd3NlcjtcbiAgICBjb25zdHJ1Y3RvcihfY29udGFpbmVyOiBTaWRlYmFyQ29udGFpbmVyLCBfcmVmOiBDaGFuZ2VEZXRlY3RvclJlZiwgcGxhdGZvcm1JZDogT2JqZWN0KTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgb3BlbigpOiB2b2lkO1xuICAgIGNsb3NlKCk6IHZvaWQ7XG4gICAgdHJpZ2dlclJlcmVuZGVyKCk6IHZvaWQ7XG4gICAgX2dldFN0eWxlKCk6IENTU1N0eWxlRGVjbGFyYXRpb247XG4gICAgX29uVHJhbnNpdGlvbkVuZChlOiBUcmFuc2l0aW9uRXZlbnQpOiB2b2lkO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgX3Nob3VsZFRyYXBGb2N1cztcbiAgICBwcml2YXRlIF9mb2N1c0ZpcnN0SXRlbTtcbiAgICBwcml2YXRlIF9vbkZvY3VzVHJhcDtcbiAgICBwcml2YXRlIF9zZXRGb2N1c2VkO1xuICAgIHByaXZhdGUgX2luaXRDbG9zZUxpc3RlbmVycztcbiAgICBwcml2YXRlIF9pbml0Q2xvc2VDbGlja0xpc3RlbmVyO1xuICAgIHByaXZhdGUgX2luaXRDbG9zZUtleURvd25MaXN0ZW5lcjtcbiAgICBwcml2YXRlIF9kZXN0cm95Q2xvc2VMaXN0ZW5lcnM7XG4gICAgcHJpdmF0ZSBfZGVzdHJveUNsb3NlQ2xpY2tMaXN0ZW5lcjtcbiAgICBwcml2YXRlIF9kZXN0cm95Q2xvc2VLZXlEb3duTGlzdGVuZXI7XG4gICAgcHJpdmF0ZSBfb25DbGlja091dHNpZGU7XG4gICAgcHJpdmF0ZSBfb25LZXlEb3duO1xuICAgIHByaXZhdGUgX2luaXRDb2xsYXBzZUxpc3RlbmVycztcbiAgICBwcml2YXRlIF9kZXN0cm95Q29sbGFwc2VMaXN0ZW5lcnM7XG4gICAgcHJpdmF0ZSBfY29sbGFwc2U7XG4gICAgcmVhZG9ubHkgX2hlaWdodDogbnVtYmVyO1xuICAgIHJlYWRvbmx5IF93aWR0aDogbnVtYmVyO1xuICAgIHJlYWRvbmx5IF9kb2NrZWRTaXplOiBudW1iZXI7XG4gICAgcmVhZG9ubHkgX2lzTW9kZU92ZXI6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgX2lzTW9kZVB1c2g6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgX2lzTW9kZVNsaWRlOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IF9pc0RvY2tlZDogYm9vbGVhbjtcbiAgICByZWFkb25seSBfaXNMZWZ0T3JUb3A6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgX2lzTGVmdE9yUmlnaHQ6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgX2lzSW5lcnQ6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfbm9ybWFsaXplUG9zaXRpb247XG59XG4iXX0=